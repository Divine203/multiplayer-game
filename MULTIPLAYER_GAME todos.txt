
 
=== Possible Titles ======
- I was bored, so i made a MULTIPLAYER GAME from Scratch.
- Let's Code a MULTIPLAYER GAME.
- Coding a MULTIPLAYER GAME from Scratch in 12 minutes.
- Programming a MULTIPLAYER GAME from scratch.
- I Programmed a MULTIPLAYER GAME from scratch.

 ] Game inspiration: Killer bean, mini militia, jetpack joyride, Terraria, Geometry Dash.

------------------------------------------------------------------
. Organize desktop. --done
. Set up code base: Typescript, webpack, npm, git. --done
. Make canvas responsive. --done
. Create base mechanics: physics, camera, movement, gameplay. 
------------------------------------------------------------------
 . player (square) that falls (physics) and can move around --done
 . research and implement 2d camera (all axis) --done
 . gameplay:
  ] guns --done*
  ] shooting --done*
  ] improve world interactions (advanced physics) --done
  ] angle shooting --done* 
    @ hold a to tilt up --done
    @ hold z to tilt down --done
    @ release to throw --done
    @ press x to cancel throw 
  ] decide the idea, concepts and features of the game.
-----------------------------------------------------------
  ] server:
-----------------------------------------------------------
    @ Implement socket and rooms concept --done
    @ Start Game --done
    @ Measure ping and display it to players --done
    @ Share item/actions movement data amongst players  
      - gun shots --done
      - grenades --done
      - global items (immobile, their either in the game or not)
      
    @ Implement damage, hp and health bar. --done
      - Correct double jump --done* (front flip)
      - Correct grenade throwing --done
      - Correct shooting --done
      - add slide movement --done
	
    @ Sprite design
      - character movements. 
        ¬ running animation
        ¬ idle animation  
	¬ jump sprites (jumping and landing)
        ¬ flip animation (double jump)
        ¬ sliding sprite

    @ Implement explosion with particles
    @ Implement death and wins.
    @ Limit Players in room to 10.
    @ Implement waiting in room for game to finish when players are in game
    @ Check all possible errors and inform/prompt players accordingly.
    @ Implement Loot system
      - classify guns
      - implement primary and secondary guns
      - spawn guns at random locations
      - spawn grenade at random locations
      - implement loot pick up 
    @ Define final components.
    @ Radom spawning
      
  ---------------------------------------------------------------
   Features:
  ---------------------------------------------------------------
  + GamePlay
    ~ Its a battle-royale like game, where players (max 10, min 2) spawn at different locations in the map.
    ~ The safe area shrinks as the game progresses (happens randomly).
    ~ Every player starts with a knife, they have to loot weapons placed at random places in the map.
    ~ The last man standing wins.

  + UI
    ~ The base map scrolling in the background.
    ~ A welcome screen, with the game title, description and a PLAY button.
    ~ An Option to read about the game and how to play. (Should be available at all states of the game).
    ~ Depending on the Multiplayer Implentation, there might be a sign up and signing [preferred name and password]
    ~ on play => A lobby is created with, them as the first player, and a link to send to invite others to join.
    ~ on link click => A UI is shown where it says Welcome to *GAME TITLE* and Join *Invites name* Lobby.
    ~ on join => A Start Match option shows.
  
  + Guns
    ~ PISTOL: A small short-range weapon, deals minimal damage, slow fire rate
    ~ AK47: A long-range weapon, deals significant damage, fast fire rate,
    ~ LMG: Similar to the AK47, different look and sound effects, fast fire rate, 
    ~ SHOTGUN: Deals MAXIMUM damage, 3 shot kill, slow fire rate, shoots 3 bullets at once.
    ~ BAZUKA: ONE SHOT KILL, Blast your enemies to oblivion.
    ~ KNIFE: Deals very little damage, can strike and dash at your enemies.
    ~ JUMP KILL: Jump on enemies head, Deals very little damage. 

  + Characters
    ~ Base character (Reference my character)
    ~ Animations: Run, Jump, Double-jump (rotation will be done by code), stand/shooting, death.
    ~ (If there's time) create different variations.

  + Items
    ~ Loots (guns)
    ~ Boxes at random places, that can be destroyed and get stuff from. 
    ~ Item Boxes for storing weapons at random places
    ~ Grenades For throwing, can be one shot, if precise enough
    ~ Hearths to increase Health.
    ~ Armor for more protection.

  + Pro tip, Implement everything with shapes and colors, before making sprites.
 

  ] implement all listed above
  ] design a solid map
  ] add multiplayer
  ] work on sprites 
  ] add lights and shadows





engine limitations
 . less flexibilty
 . click bait 
 . extra study time
 . 

no engine limitations --use()
 . less technicality
 . more prone to errors





. work on effects: camera shake.
. sound design: sound effects, music.
. pixel art: gimp and aesprite.
. singleplayer: zombie survival.
. multiplayer: Web socket.
. UI
. lighting and shadows. (later) #




Map Plans
. Ghost town
  - tall buildings
  - small buildings
  - houses
  - shops
  - 1 watch tower (the main attention draw)
  
  + Auxilary stuff
   - parked cars
   - dead bodies
   - withered trees
   - a few weeds
   - tripping street lights


. Forest
  -  Trees and grass and floating platforms
  - 








